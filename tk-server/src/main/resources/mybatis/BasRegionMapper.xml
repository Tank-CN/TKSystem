<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tk.mapper.BasRegionMapper" >
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" />
  <resultMap id="BaseResultMap" type="com.tk.model.BasRegion" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="PID" property="pid" jdbcType="INTEGER" />
    <result column="SORT" property="sort" jdbcType="INTEGER" />
    <result column="LEVEL" property="level" jdbcType="INTEGER" />
    <result column="LONGCODE" property="longcode" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, TITLE, PID, SORT, LEVEL, LONGCODE, CODE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tk.model.BasRegionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bas_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bas_region
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bas_region
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tk.model.BasRegionExample" >
    delete from bas_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tk.model.BasRegion" >
    insert into bas_region (ID, TITLE, PID, 
      SORT, LEVEL, LONGCODE, 
      CODE)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{longcode,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tk.model.BasRegion" >
    insert into bas_region
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="pid != null" >
        PID,
      </if>
      <if test="sort != null" >
        SORT,
      </if>
      <if test="level != null" >
        LEVEL,
      </if>
      <if test="longcode != null" >
        LONGCODE,
      </if>
      <if test="code != null" >
        CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="longcode != null" >
        #{longcode,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tk.model.BasRegionExample" resultType="java.lang.Integer" >
    select count(*) from bas_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bas_region
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        PID = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        SORT = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        LEVEL = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.longcode != null" >
        LONGCODE = #{record.longcode,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bas_region
    set ID = #{record.id,jdbcType=INTEGER},
      TITLE = #{record.title,jdbcType=VARCHAR},
      PID = #{record.pid,jdbcType=INTEGER},
      SORT = #{record.sort,jdbcType=INTEGER},
      LEVEL = #{record.level,jdbcType=INTEGER},
      LONGCODE = #{record.longcode,jdbcType=VARCHAR},
      CODE = #{record.code,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tk.model.BasRegion" >
    update bas_region
    <set >
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        PID = #{pid,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        SORT = #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="longcode != null" >
        LONGCODE = #{longcode,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tk.model.BasRegion" >
    update bas_region
    set TITLE = #{title,jdbcType=VARCHAR},
      PID = #{pid,jdbcType=INTEGER},
      SORT = #{sort,jdbcType=INTEGER},
      LEVEL = #{level,jdbcType=INTEGER},
      LONGCODE = #{longcode,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>